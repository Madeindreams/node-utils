name: Tag on Merge

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get the latest tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$TAG" ]; then
            echo "No tags found, starting from v0.0.0"
            echo "tag=v0.0.0" >> $GITHUB_ENV
          else
            echo "Latest tag: $TAG"
            echo "tag=$TAG" >> $GITHUB_ENV
          fi

      - name: Calculate next tag
        id: calc_tag
        run: |
          # Remove the leading 'v' from the tag if it exists
          TAG_WITHOUT_V=${{ env.tag }}
          if [[ $TAG_WITHOUT_V == v* ]]; then
            TAG_WITHOUT_V=${TAG_WITHOUT_V:1}
          fi

          # Split the tag into its components
          IFS='.' read -r -a parts <<< "$TAG_WITHOUT_V"
          major="${parts[0]}"
          minor="${parts[1]}"
          patch="${parts[2]}"

          patch=$((patch + 1))

          if [ $patch -eq 100 ]; then
            patch=0
            minor=$((minor + 1))
          fi

          NEXT_TAG="v${major}.${minor}.${patch}"
          echo "Next tag: $NEXT_TAG"
          echo "next_tag=$NEXT_TAG" >> $GITHUB_ENV

      - name: Create Tag
        run: |
          git tag ${{ env.next_tag }}
          git push origin ${{ env.next_tag }}

      - name: Output Tag
        run: echo "Tag ${{ env.next_tag }} created and pushed successfully."
